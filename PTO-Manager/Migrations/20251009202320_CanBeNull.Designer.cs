// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTO_Manager.Context;

#nullable disable

namespace PTO_Manager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251009202320_CanBeNull")]
    partial class CanBeNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PTO_Manager.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Biralhat")
                        .HasColumnType("bit");

                    b.Property<bool>("Kerhet")
                        .HasColumnType("bit");

                    b.Property<int>("ReszlegId")
                        .HasColumnType("int");

                    b.Property<Guid>("SzemelyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Visszavonhat")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ReszlegId");

                    b.HasIndex("SzemelyId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("PTO_Manager.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ReszlegNev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("PTO_Manager.Entities.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.Property<string>("Leiras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("PTO_Manager.Entities.Preferenciak", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Value")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Preferenciak");
                });

            modelBuilder.Entity("PTO_Manager.Entities.RemainingDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EddigKivett")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Ev")
                        .HasColumnType("date");

                    b.Property<int>("Fuggoben")
                        .HasColumnType("int");

                    b.Property<int>("OsszeesSzab")
                        .HasColumnType("int");

                    b.Property<Guid>("SzemelyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SzemelyId")
                        .IsUnique();

                    b.ToTable("Remaining");
                });

            modelBuilder.Entity("PTO_Manager.Entities.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.Property<Guid>("KerelemSzam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Megjegyzes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ModositasiIdo")
                        .HasColumnType("date");

                    b.Property<Guid?>("MosdositoSzemelyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Statusz")
                        .HasColumnType("int");

                    b.Property<Guid>("SzemelyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SzemelyId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("PTO_Manager.Entities.SpecialDays", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<bool>("IsWorkingDay")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SpecialDays");
                });

            modelBuilder.Entity("PTO_Manager.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jelszo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReszlegId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Torzsszam")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReszlegId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PTO_Manager.Entities.Admin", b =>
                {
                    b.HasOne("PTO_Manager.Entities.Department", "Reszleg")
                        .WithMany()
                        .HasForeignKey("ReszlegId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTO_Manager.Entities.User", "Szemely")
                        .WithMany("Ugyintezo")
                        .HasForeignKey("SzemelyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reszleg");

                    b.Navigation("Szemely");
                });

            modelBuilder.Entity("PTO_Manager.Entities.RemainingDay", b =>
                {
                    b.HasOne("PTO_Manager.Entities.User", "Szemely")
                        .WithOne("FennmaradoNapok")
                        .HasForeignKey("PTO_Manager.Entities.RemainingDay", "SzemelyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Szemely");
                });

            modelBuilder.Entity("PTO_Manager.Entities.Request", b =>
                {
                    b.HasOne("PTO_Manager.Entities.User", "Szemely")
                        .WithMany("Kerelmek")
                        .HasForeignKey("SzemelyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Szemely");
                });

            modelBuilder.Entity("PTO_Manager.Entities.User", b =>
                {
                    b.HasOne("PTO_Manager.Entities.Department", "Reszleg")
                        .WithMany()
                        .HasForeignKey("ReszlegId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reszleg");
                });

            modelBuilder.Entity("PTO_Manager.Entities.User", b =>
                {
                    b.Navigation("FennmaradoNapok")
                        .IsRequired();

                    b.Navigation("Kerelmek");

                    b.Navigation("Ugyintezo");
                });
#pragma warning restore 612, 618
        }
    }
}
